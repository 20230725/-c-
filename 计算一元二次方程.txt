输入描述：
多组输入，一行，包含三个浮点数a, b, c，以一个空格分隔，表示一元二次方程ax2 + bx + c = 0的系数。
输出描述：
针对每组输入，输出一行，输出一元二次方程ax2 + bx +c = 0的根的情况。

  如果a = 0，输出“Not quadratic equation”；

  如果a ≠  0，分三种情况：

△ = 0，则两个实根相等，输出形式为：x1=x2=...。

△  > 0，则两个实根不等，输出形式为：x1=...;x2=...，其中x1  <=  x2。

△  < 0，则有两个虚根，则输出：x1=实部-虚部i;x2=实部+虚部i，即x1的虚部系数小于等于x2的虚部系数，实部为0时不可省略。实部= -b / (2*a),虚部= sqrt(-△ ) / (2*a)

所有实数部分要求精确到小数点后2位，数字、符号之间没有空格。

示例1
输入：
2.0 7.0 1.0
复制
输出：
x1=-3.35;x2=-0.15
复制
示例2
输入：
0.0 3.0 3.0
复制
输出：
Not quadratic equation
复制
示例3
输入：
1 2 1
复制
输出：
x1=x2=-1.00
复制
示例4
输入：
2 2 5
复制
输出：
x1=-0.50-1.50i;x2=-0.50+1.50i
复制
示例5
输入：
1 0 1
复制
输出：
x1=0.00-1.00i;x2=0.00+1.00i
#include <stdio.h>
#include <math.h>
int main() {
    float a,b,c,d,x1,x2;
    while(scanf("%f %f %f",&a,&b,&c)!=EOF){
        d=b*b-4*a*c;
        if(a!=0){
            if(0==d){
                if(0==b) printf("x1=x2=0.00\n");
                else printf("x1=x2=%.2f\n",-b/(2.0*a));
            }
            else if(d>0){
                x2=(-b+sqrt(d))/(2.0*a);
                x1=(-b-sqrt(d))/(2.0*a);              
                printf("x1=%.2f;x2=%.2f\n",x1,x2);
            }
            else{
                x1=-sqrt(-d)/(2.0*a);
                x2=+sqrt(-d)/(2.0*a);
                d=-b/(2*a);
                printf("x1=%.2f%.2fi;x2=%.2f+%.2fi\n",d,x1,d,x2);
            }
        }
         else printf("Not quadratic equation\n");
    }
    return 0;
}